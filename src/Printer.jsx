/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 printer.glb --transform
Author: leifer.kopf (https://sketchfab.com/leifer.kopf)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/08-printer-householdpropschallenge-a11b8e0bfc8741f08472c09b10202c75
Title: 08 Printer #HouseholdPropsChallenge
*/

import { useGLTF } from "@react-three/drei";
import { useFrame, useThree } from "@react-three/fiber";
import { useRef, useState } from "react";
import * as THREE from "three";

export default function Printer({ z = 0 }) {
  const { nodes, materials } = useGLTF("/printer-v2.glb");
  const { viewport, camera } = useThree();
  const { width, height } = viewport.getCurrentViewport(camera, [0, 0, z]);
  const ref = useRef();

  const [data] = useState({
    // Viewport goes from -1 to 1
    x: THREE.MathUtils.randFloatSpread(2),
    y: THREE.MathUtils.randFloatSpread(height),
    rotationX: Math.random() * Math.PI,
    rotationY: Math.random() * Math.PI,
    rotationZ: Math.random() * Math.PI,
  });

  useFrame(() => {
    ref.current.position.set(data.x * width, (data.y += 0.02), z);
    ref.current.rotation.set(
      (data.rotationX += 0.005),
      (data.rotationY += 0.005),
      (data.rotationZ += 0.005)
    );
    if (data.y > height / 2) {
      data.y = -height;
    }
  });
  return (
    <group dispose={null} ref={ref} scale={7}>
      <mesh
        geometry={nodes.Cube_0.geometry}
        material={materials.Grey}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[0.15, 0.075, 0.06]}
      />
      <mesh
        geometry={nodes.Cube_1.geometry}
        material={materials.Buttons_Black}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[0.15, 0.075, 0.06]}
      />
      <mesh
        geometry={nodes.Cube_2.geometry}
        material={materials.White}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[0.15, 0.075, 0.06]}
      />
      <mesh
        geometry={nodes.Cube001_0.geometry}
        material={materials.Button_ONOFF}
        position={[0.136, 0.055, 0.06]}
        rotation={[-1.005, 0, 0]}
        scale={[5, 2.5, 2.5]}
      />
    </group>
  );
}
